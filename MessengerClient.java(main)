import java.io.*;
import java.net.*;
//MAIN METHOD
public class MessengerClient {
    public static void main(String[] args) throws Exception {
        Socket socket = new Socket("localhost", 6789);
        BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
        PrintWriter out = new PrintWriter(socket.getOutputStream(), true);
        BufferedReader userInput = new BufferedReader(new InputStreamReader(System.in));



         Database.initialize();
        Scanner scanner = new Scanner(System.in);

        System.out.println("1. Register\n2. Login");
        String choice = scanner.nextLine();

        System.out.print("Username: ");
        String username = scanner.nextLine();
        System.out.print("Password: ");
        String password = scanner.nextLine();

        if (choice.equals("1")) {
            AuthService.register(username, password);
        } else if (choice.equals("2")) {
            boolean success = AuthService.login(username, password);
            if (success) {
                System.out.println("Login successful. Welcome back, " + username + "!");
            } else {
                System.out.println("Login failed.");
            }
        } else {
            System.out.println("Invalid choice.");
        }

        scanner.close();

//---------------
        System.out.println(in.readLine());
        String username = userInput.readLine();
        out.println(username);

        System.out.println(in.readLine()); // Enter password
        String password = userInput.readLine();
        out.println(password);
//--------------------
        String authResponse = in.readLine();
        System.out.println(authResponse);
        if (!authResponse.startsWith("Authenticated")) {
            socket.close();
            return;
        }

        Thread listener = new Thread(() -> {
            try {
                String serverMsg;
                while ((serverMsg = in.readLine()) != null) {
                    if (serverMsg.startsWith("INCOMING_FILE ")) {
                        String[] parts = serverMsg.split(" ", 3);
                        String sender = parts[1];
                        String fileName = new File(parts[2]).getName();
                        System.out.println("Incoming file from " + sender + ": " + fileName);

                        ServerSocket receiverSocket = new ServerSocket(7000);
                        Socket fileSocket = receiverSocket.accept();
                        FileTransferHandler.receiveFile(fileSocket, "downloads");
                        fileSocket.close();
                        receiverSocket.close();
                        System.out.println("File received.");
                    } else {
                        System.out.println(serverMsg);
                    }
                }
            } catch (IOException e) {
                System.out.println("[Client] Disconnected from server.");
            }
        });

        listener.start();

        String input;
        while ((input = userInput.readLine()) != null) {
            if (input.startsWith("FILE ")) {
                String[] parts = input.split(" ", 3);
                if (parts.length < 3) continue;

                out.println(input);
                Thread.sleep(1000);

                try (Socket fileSocket = new Socket("localhost", 7000)) {
                    FileTransferHandler.sendFile(fileSocket, parts[2]);
                    System.out.println("File sent.");
                }
                continue;
            }
            out.println(input);
        }
    }
}
